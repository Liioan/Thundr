// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    //! non nextauth
    notes         Note[]
    Pin           Pin[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Note {
    id           String   @id @default(cuid())
    title        String
    content      String   @db.Text
    reminderDate String?
    userId       String
    noteTypeId   String
    createdAt    DateTime @default(now())

    type NoteType @relation(fields: [noteTypeId], references: [id], onDelete: Cascade)
    user User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    pin  Pin[]

    @@unique([createdAt, id])
    @@index([userId])
    @@index([noteTypeId])
}

model NoteType {
    id    String @id @default(cuid())
    type  String
    notes Note[]
}

model Pin {
    userId String
    noteId String

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
    note Note @relation(fields: [noteId], references: [id], onDelete: Cascade)

    @@id([userId, noteId])
    @@index([userId])
    @@index([noteId])
}
